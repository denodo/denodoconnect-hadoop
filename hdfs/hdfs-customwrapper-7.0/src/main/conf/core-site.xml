<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

    <!-- S3A authentication properties -->
    <!--
    <property>
        <name>fs.s3a.access.key</name>
        <description>AWS access key ID.</description>
        <value>YOUR ACCESS KEY ID</value>
    </property>
    <property>
        <name>fs.s3a.secret.key</name>
        <description>AWS secret key.</description>
        <value>YOUR SECRET ACCESS KEY</value>
    </property>
    -->

    <!-- S3A other properties -->
    <!--
    <property>
        <name>fs.s3a.endpoint</name>
        <description>AWS S3 endpoint to connect to. An up-to-date list is
            provided in the AWS Documentation: regions and endpoints. Without this
            property, the standard region (s3.amazonaws.com) is assumed.
        </description>
        <value>YOUR AWS S3 ENDPOINT</value>
    </property>
    -->

    <!-- S3A IAM Assumed Roles properties -->
    <!--  
    <property>
        <name>fs.s3a.aws.credentials.provider</name>
        <value>org.apache.hadoop.fs.s3a.AssumedRoleCredentialProvider
        </value>
        <value>org.apache.hadoop.fs.s3a.auth.AssumedRoleCredentialProvider
        </value>
    </property>

    <property>
        <name>fs.s3a.assumed.role.arn</name>
        <description>
            AWS ARN for the role to be assumed.
            Required if the
            fs.s3a.aws.credentials.provider contains
            org.apache.hadoop.fs.s3a.AssumedRoleCredentialProvider
        </description>
        <value>ARN OF THE ASSUMED ROLE</value>
    </property>

    <property>
        <name>fs.s3a.assumed.role.credentials.provider</name>
        <description>
            List of credential providers to authenticate with the
            STS endpoint and retrieve short-lived role credentials.
            Only used if AssumedRoleCredentialProvider is the AWS credential
            Provider. If unset, uses
            "org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider".
        </description>
        <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider
        </value>
    </property>

    <property>
        <name>fs.s3a.assumed.role.session.duration</name>
        <value>30m</value>
        <description>
            Duration of assumed roles before a refresh is attempted.
            Only used if AssumedRoleCredentialProvider is the AWS credential
            provider.
            Range: 15m to 1h
        </description>
    </property>

    <property>
        <name>fs.s3a.access.key</name>
        <description>AWS access key ID.</description>
        <value>YOUR ACCESS KEY ID</value>
    </property>

    <property>
        <name>fs.s3a.secret.key</name>
        <description>AWS secret key.</description>
        <value>YOUR SECRET ACCESS KEY</value>
    </property>
    -->


    <!-- Azure Data Lake credentials -->
    <!--
    <property>
        <name>fs.adl.oauth2.access.token.provider.type</name>
        <value>ClientCredential</value>
    </property>
    <property>
        <name>fs.adl.oauth2.refresh.url</name>
        <value>YOUR TOKEN ENDPOINT</value>
    </property>
    <property>
        <name>fs.adl.oauth2.client.id</name>
        <value>YOUR CLIENT ID</value>
    </property>
    <property>
        <name>fs.adl.oauth2.credential</name>
        <value>YOUR CLIENT SECRET</value>
    </property>
    -->


    <!-- Azure Blob Storage credentials -->
    <!--
    <property>
        <name>fs.azure.account.key.YOURACCOUNT.blob.core.windows.net</name>
        <value>YOUR ACCESS KEY</value>
    </property>
    -->
    
    <!-- Goolge Cloud Storage credentials -->
    <!-- 
    <property>
        <name>google.cloud.auth.service.account.enable</name>
        <value>true</value>
    </property>

    <property>
        <name>google.cloud.auth.service.account.json.keyfile</name>
        <value>/PATH/TO/KEYFILE</value>
    </property>
     -->

</configuration>